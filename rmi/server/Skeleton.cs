using System;

/*
 * Copyright (c) 1996, 2004, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */
namespace java.rmi.server
{

	/// <summary>
	/// The <code>Skeleton</code> interface is used solely by the RMI
	/// implementation.
	/// 
	/// <para> Every version 1.1 (and version 1.1 compatible skeletons generated in
	/// 1.2 using <code>rmic -vcompat</code>) skeleton class generated by the rmic
	/// stub compiler implements this interface. A skeleton for a remote object is
	/// a server-side entity that dispatches calls to the actual remote object
	/// implementation.
	/// 
	/// @author  Ann Wollrath
	/// @since   JDK1.1
	/// </para>
	/// </summary>
	/// @deprecated no replacement.  Skeletons are no longer required for remote
	/// method calls in the Java 2 platform v1.2 and greater. 
	[Obsolete("no replacement.  Skeletons are no longer required for remote")]
	public interface Skeleton
		/// <summary>
		/// Unmarshals arguments, calls the actual remote object implementation,
		/// and marshals the return value or any exception.
		/// </summary>
		/// <param name="obj"> remote implementation to dispatch call to </param>
		/// <param name="theCall"> object representing remote call </param>
		/// <param name="opnum"> operation number </param>
		/// <param name="hash"> stub/skeleton interface hash </param>
		/// <exception cref="java.lang.Exception"> if a general exception occurs.
		/// @since JDK1.1 </exception>
		/// @deprecated no replacement 
	{
//JAVA TO C# CONVERTER WARNING: Method 'throws' clauses are not available in .NET:
//ORIGINAL LINE: @Deprecated("no replacement") void dispatch(java.rmi.Remote obj, RemoteCall theCall, int opnum, long hash) throws Exception;
		[Obsolete("no replacement")]
		void Dispatch(Remote obj, RemoteCall theCall, int opnum, long hash);

		/// <summary>
		/// Returns the operations supported by the skeleton. </summary>
		/// <returns> operations supported by skeleton
		/// @since JDK1.1 </returns>
		/// @deprecated no replacement 
		[Obsolete("no replacement")]
		Operation[] Operations {get;}
	}

}