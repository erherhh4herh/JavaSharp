/*
 * Copyright (c) 2000, 2005, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

namespace java.sql
{

	/// <summary>
	/// The representation of a savepoint, which is a point within
	/// the current transaction that can be referenced from the
	/// <code>Connection.rollback</code> method. When a transaction
	/// is rolled back to a savepoint all changes made after that
	/// savepoint are undone.
	/// <para>
	/// Savepoints can be either named or unnamed. Unnamed savepoints
	/// are identified by an ID generated by the underlying data source.
	/// 
	/// @since 1.4
	/// </para>
	/// </summary>

	public interface Savepoint
	{

		/// <summary>
		/// Retrieves the generated ID for the savepoint that this
		/// <code>Savepoint</code> object represents. </summary>
		/// <returns> the numeric ID of this savepoint </returns>
		/// <exception cref="SQLException"> if this is a named savepoint
		/// @since 1.4 </exception>
//JAVA TO C# CONVERTER WARNING: Method 'throws' clauses are not available in .NET:
//ORIGINAL LINE: int getSavepointId() throws SQLException;
		int SavepointId {get;}

		/// <summary>
		/// Retrieves the name of the savepoint that this <code>Savepoint</code>
		/// object represents. </summary>
		/// <returns> the name of this savepoint </returns>
		/// <exception cref="SQLException"> if this is an un-named savepoint
		/// @since 1.4 </exception>
//JAVA TO C# CONVERTER WARNING: Method 'throws' clauses are not available in .NET:
//ORIGINAL LINE: String getSavepointName() throws SQLException;
		String SavepointName {get;}
	}

}